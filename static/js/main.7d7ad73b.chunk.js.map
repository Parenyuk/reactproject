{"version":3,"sources":["components/Monday/MessageBody/UserIcon/UserIcon.module.css","components/Monday/HumanQualities/HumanQuality/HumanQuality.module.css","components/Monday/MessageBody/Message/UserName/UserName.module.css","components/Monday/MessageBody/Message/Message.module.css","components/Monday/MessageBody/Message/Time/Time.module.css","components/Monday/MessageBody/MessageBody.module.css","components/Monday/HumanQualities/HumanQualities.module.css","App.module.css","components/Navbar/Navbar.jsx","components/Monday/MessageBody/Message/UserName/UserName.jsx","components/Monday/MessageBody/Message/UserText/UserText.jsx","components/Monday/MessageBody/Message/Time/Time.jsx","components/Monday/MessageBody/Message/Message.jsx","components/Monday/MessageBody/UserIcon/UserIcon.jsx","components/Monday/MessageBody/MessageBody.jsx","components/Monday/HumanQualities/HumanQuality/HumanQuality.jsx","components/Monday/HumanQualities/HumanQualities.jsx","components/Monday/Counter/CounterInput/CounterScreen/CounterScreen.jsx","components/Monday/Counter/CounterInput/CounterInput.jsx","components/Monday/Counter/Counter.jsx","components/Monday/Monday.jsx","components/Tuesday/Tuesday.jsx","components/Wednesday/Wednesday.jsx","components/Thursday/Thursday.jsx","components/Friday/Friday.jsx","App.jsx","serviceWorker.js","index.jsx"],"names":["module","exports","Navbar","className","to","activeClassName","UserName","s","userName","UserText","Time","props","state","date","this","timerID","setInterval","Date","str","getHours","getMinutes","setState","clearInterval","React","Component","Message","message","UserIcon","userIcon","img","src","MessageBody","HumanQuality","id","SecondElement","HumanQuallity","humanQualities","HumanQualities","humanQualitiesData","map","d","key","CounterScreen","count","CounterInput","error","incrementCounter","currentValue","onButtonClick","newText","alert","onInputChanged","e","currentTarget","value","onKeyPress","classNameForInput","type","onChange","onClick","Counter","render","Monday","App","Tuesday","Wednesday","Thursday","Friday","path","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.7d7ad73b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"img\":\"UserIcon_img__16gKq\",\"userIcon\":\"UserIcon_userIcon__23gRY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"HumanQuallity\":\"HumanQuality_HumanQuallity__2EkPa\",\"SecondElement\":\"HumanQuality_SecondElement__2TPhs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userName\":\"UserName_userName__3eQS8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__WvASO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Time\":\"Time_Time__3BMag\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MessageBody\":\"MessageBody_MessageBody__3h51Y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"HumanQualities\":\"HumanQualities_HumanQualities__1-mtK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__IMZRG\"};","import {NavLink} from \"react-router-dom\";\r\nimport React from \"react\";\r\nimport './Navbar.css'\r\nimport { slide as Menu } from 'react-burger-menu'\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <div >\r\n            <Menu>\r\n                <nav className={'links'}>\r\n                    <ul>\r\n                        <li className=\"menu-item\"><NavLink to={'/monday'} activeClassName={'active'} >Monday</NavLink></li>\r\n                        <li className=\"menu-item\"><NavLink to={'/tuesday'} activeClassName={'active'}>Tuesday</NavLink></li>\r\n                        <li className=\"menu-item\"><NavLink to={'/wednesday'} activeClassName={'active'}>Wednesday</NavLink></li>\r\n                        <li className=\"menu-item\"><NavLink to={'/thursday'}activeClassName={'active'}>Thursday</NavLink></li>\r\n                        <li className=\"menu-item\"><NavLink to={'/friday'} activeClassName={'active'}>Friday</NavLink></li>\r\n                    </ul>\r\n\r\n                </nav>\r\n            </Menu>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Navbar;","import React from \"react\";\r\nimport s from './UserName.module.css'\r\n\r\nconst UserName = () => {\r\n    return (\r\n        <div className={s.userName}>\r\n            Victor Parenyuk\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserName;","import React from \"react\";\r\nimport s from './UserText.css'\r\n\r\nconst UserText = () => {\r\n    return (\r\n        <div className={s.UserText}>\r\n            Hello React!  Hello React!  Hello React!  Hello React!  Hello React!  Hello React!  Hello React!Hello React!  Hello React!  Hello React!  Hello React!  Hello React!Hello React!  Hello React!  Hello React!  Hello React!  Hello React!\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserText;","import React from \"react\";\r\nimport s from './Time.module.css'\r\n\r\nclass Time extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {date: ''};\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        this.timerID = setInterval(\r\n            () => {\r\n                let date = new Date();\r\n                let str = `${date.getHours()}:${date.getMinutes()}`;\r\n                this.setState({date: str})\r\n            },\r\n            1000\r\n        );\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        clearInterval(this.timerID);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={s.Time}>\r\n                {this.state.date}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n/*ВАРІАНТ 2 ГОДИННИК З СЕКУНДАМИ!!!\r\nclass Time extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        let time = new Date();\r\n        this.state = {date: new Date()};\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.timerID = setInterval(\r\n            () => this.setState({date: new Date()}),\r\n            1000\r\n        );\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        clearInterval(this.timerID);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={s.Time}>\r\n                {this.state.date.toLocaleTimeString()}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n */\r\n\r\n/*\r\nclass Time extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            time: new Date().toLocaleString()\r\n\r\n        };\r\n    }\r\n\r\n\r\n\r\n\r\n    componentDidMount() {\r\n        this.intervalID = setInterval(\r\n            () => this.tick(),\r\n            1000\r\n        );\r\n    }\r\n    componentWillUnmount() {\r\n        clearInterval(this.intervalID);\r\n    }\r\n    tick() {\r\n        this.setState({\r\n            time: new Date().toLocaleString()\r\n        });\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.state.time}.\r\n            </div>\r\n\r\n\r\n        );\r\n    }\r\n}\r\n*/\r\n\r\n\r\nexport default Time;","import React from \"react\";\r\nimport UserName from \"./UserName/UserName\";\r\nimport UserText from \"./UserText/UserText\";\r\nimport s from './Message.module.css'\r\nimport Time from \"./Time/Time\";\r\n\r\n\r\nconst Message = () => {\r\n    return (\r\n        <div className={s.message}>\r\n            <UserName/>\r\n            <UserText/>\r\n            <Time/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Message;","import React from \"react\";\r\nimport s from './UserIcon.module.css'\r\n\r\nconst UserIcon = () => {\r\n    return (\r\n        <div className={s.userIcon}>\r\n            <img className={s.img} src={'https://themes.iamabdus.com/dealsy/1.0/img/user/user-thumb.jpg'}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserIcon;","import React from \"react\";\r\nimport Message from \"./Message/Message\";\r\nimport UserIcon from \"./UserIcon/UserIcon\";\r\nimport s from './MessageBody.module.css'\r\n\r\nconst MessageBody = (props) => {\r\n    return (\r\n        <div className={s.MessageBody}>\r\n            <UserIcon/>\r\n            <Message/>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MessageBody;","import React from \"react\";\r\nimport s from './HumanQuality.module.css';\r\n\r\nconst HumanQuality = (props) => {\r\n    return (\r\n        <div className={props.id === 2 ? s.SecondElement : s.HumanQuallity}>\r\n            {props.humanQualities}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HumanQuality;\r\n\r\n\r\n","import React, {Component} from \"react\";\r\nimport s from './HumanQualities.module.css';\r\nimport HumanQuality from \"./HumanQuality/HumanQuality\";\r\n\r\nexport default class HumanQualities extends Component {\r\n    state = {\r\n        humanQualitiesData: [\r\n            {id: 1, humanQualities: `рационалист`} ,\r\n            {id: 2, humanQualities: `комуннист`},\r\n            {id: 3, humanQualities: `анимешник`},\r\n            {id: 4, humanQualities: `атеист`}\r\n        ]\r\n    }\r\n    render () {\r\n\r\n\r\n        return (\r\n            <div className={s.HumanQualities}>\r\n                {this.state.humanQualitiesData.map(d => <HumanQuality key={d.id} id={d.id} humanQualities={d.humanQualities} />)}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\n\r\n\r\nconst CounterScreen = (props) => {\r\n    return (\r\n        <div>\r\n            <span>{props.count}</span>\r\n        </div>\r\n    )\r\n}\r\nexport default CounterScreen;","import React, {Component} from \"react\";\r\nimport './CounterInput.css'\r\nimport CounterScreen from \"./CounterScreen/CounterScreen\";\r\n\r\n class CounterInput extends Component  {\r\n     state = {\r\n         error: false,\r\n         message: \"\",\r\n         count: 0\r\n     }\r\n     incrementCounter = () => this.setState((currentValue) => ({count: currentValue.count + 1}));\r\n     onButtonClick = () => {\r\n         let newText = this.state.message;\r\n         this.setState({message: \"\"});\r\n\r\n         if (newText === \"\") {\r\n             this.setState({error: true});\r\n         } else {\r\n             this.setState({error: false});\r\n             // передаём новый текст наружу\r\n             alert(this.state.message)\r\n\r\n         }\r\n         this.incrementCounter();\r\n     }\r\n\r\n     onInputChanged = (e) => {\r\n         this.setState({\r\n             error: false,\r\n             message: e.currentTarget.value\r\n         });\r\n     }\r\n\r\n     onKeyPress = (e) => {\r\n         if (e.key === \"Enter\") {\r\n             this.onButtonClick()\r\n         }\r\n     }\r\n    render () {\r\n        let classNameForInput = this.state.error ? \"error\" : \"\";\r\n        return (\r\n            <div>\r\n                <div>\r\n                    <CounterScreen count={this.state.count}/>\r\n                </div>\r\n                <input className={classNameForInput} type=\"text\"\r\n                       onChange={this.onInputChanged}\r\n                       onKeyPress={this.onKeyPress}\r\n                       value={this.state.message}\r\n                />\r\n                <button onClick={this.onButtonClick}>button</button>\r\n                {/*<CounterButton onButtonClick={this.onButtonClick}  />*/}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CounterInput;\r\n\r\n","// import React from \"react\";\r\n// import './Counter.css'\r\n// import CounterButton from \"./CounterButton/CounterButton\";\r\n// // import CounterInput from \"./CounterInput/CounterInput\";\r\n// import CounterScreen from \"./CounterScreen/CounterScreen\";\r\n//\r\n// export default class Counter extends React.Component {\r\n//     state = {\r\n//         count: 0,\r\n//         error: false,\r\n//         message: '',\r\n//     }\r\n//\r\n//     onButtonClick = () => {\r\n//         // this.setState({message: ''})\r\n//         // if(this.state.message === '') {\r\n//         //     this.setState({error: true});\r\n//         // }\r\n//         // else {\r\n//         //     alert(this.state.message);\r\n//         // }\r\n//         //\r\n//         // this.setState({message: ''});\r\n//         let newText = this.state.message;\r\n//         this.setState({message: \"\"});\r\n//\r\n//         if (newText === \"\") {\r\n//             this.setState({error: true});\r\n//         } else {\r\n//             this.setState({error: false});\r\n//             // передаём новый текст наружу\r\n//             alert(this.state.message)\r\n//         }\r\n//\r\n//         this.incrementCounter()\r\n//\r\n//\r\n//     }\r\n//     onInputMessage = (e) => {\r\n//         this.setState({\r\n//             error: false,\r\n//             message: e.currentTarget.value\r\n//         });\r\n//     }\r\n//\r\n//     incrementCounter = () => this.setState((currentValue) => ({count: currentValue.count + 1}));\r\n//     onKeyPress = (e) => {\r\n//          if (e.key === \"Enter\") {\r\n//              this.onButtonClick()\r\n//          }\r\n//      }\r\n//\r\n//     render() {\r\n//         let classNameForInput = this.state.error ? \"error\" : \"\";\r\n//         return (\r\n//             <div>\r\n//                 <div>\r\n//                    <CounterScreen count={this.state.count} />\r\n//                 </div>\r\n//                 {/*<CounterInput onInputMessage={this.onInputMessage} message={this.state.message} error={this.state.error}/>*/}\r\n//                 <input className={classNameForInput} type=\"text\" placeholder=\"New task name\"\r\n//                        onChange={this.onTitleChanged}\r\n//                        onKeyPress={this.onKeyPress}\r\n//                        value={this.state.message}\r\n//                 />\r\n//                 <CounterButton onButtonClick={this.onButtonClick}  onInputMessage={this.onInputMessage}/>\r\n//             </div>\r\n//         )\r\n//     }\r\n//\r\n//\r\n// }\r\nimport React from 'react';\r\nimport './Counter.css'\r\nimport CounterScreen from \"./CounterInput/CounterScreen/CounterScreen\";\r\nimport CounterInput from \"./CounterInput/CounterInput\";\r\n\r\n\r\nclass Counter extends React.Component {\r\n    // state = {\r\n    //     error: false,\r\n    //     message: \"\",\r\n    //     count: 0\r\n    // }\r\n    // incrementCounter = () => this.setState((currentValue) => ({count: currentValue.count + 1}));\r\n    // onButtonClick = () => {\r\n    //     let newText = this.state.message;\r\n    //     this.setState({message: \"\"});\r\n    //\r\n    //     if (newText === \"\") {\r\n    //         this.setState({error: true});\r\n    //     } else {\r\n    //         this.setState({error: false});\r\n    //         // передаём новый текст наружу\r\n    //         alert(this.state.message)\r\n    //\r\n    //\r\n    //     }\r\n    //     this.incrementCounter();\r\n    // }\r\n    //\r\n    // onInputChanged = (e) => {\r\n    //     this.setState({\r\n    //         error: false,\r\n    //         message: e.currentTarget.value\r\n    //     });\r\n    // }\r\n    //\r\n    // onKeyPress = (e) => {\r\n    //     if (e.key === \"Enter\") {\r\n    //         this.onButtonClick()\r\n    //     }\r\n    // }\r\n\r\n\r\n    render = () => {\r\n        // let classNameForInput = this.state.error ? \"error\" : \"\";\r\n\r\n        return (\r\n            <div>\r\n                <CounterInput/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Counter;\r\n\r\n","import React from \"react\";\r\nimport s from \"../../App.module.css\";\r\nimport MessageBody from \"./MessageBody/MessageBody\";\r\nimport HumanQualities from \"./HumanQualities/HumanQualities\";\r\nimport Counter from \"./Counter/Counter\";\r\n\r\n\r\n const Monday = () => {\r\n    return (\r\n        <div>\r\n            <div className={s.App}>\r\n                <div>\r\n                    <MessageBody/>\r\n                </div>\r\n                <div>\r\n                    <HumanQualities/>\r\n                </div>\r\n                <div>\r\n                    <Counter/>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Monday;","import React from \"react\";\r\nimport s from './../../App.module.css'\r\n\r\nconst Tuesday = () => {\r\n    return (\r\n        <div className={s.App}>\r\n            Tuesday\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Tuesday;\r\n","import React from \"react\";\r\nimport s from \"../../App.module.css\";\r\n\r\nconst Wednesday = () => {\r\n    return (\r\n        <div className={s.App}>\r\n            Wednesday\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Wednesday;\r\n","import React from \"react\";\r\nimport s from \"../../App.module.css\";\r\n\r\n\r\nconst Thursday = () => {\r\n    return (\r\n        <div>\r\n            <div className={s.App}>\r\n                Thursday\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Thursday;\r\n","import React from \"react\";\r\nimport s from \"../../App.module.css\";\r\n\r\nconst Friday = () => {\r\n    return (\r\n        <div className={s.App}>\r\n            Friday\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Friday;\r\n","import React from 'react';\nimport './App.module.css';\nimport {HashRouter, Route, Switch} from \"react-router-dom\";\n\nimport Navbar from \"./components/Navbar/Navbar\";\nimport Monday from \"./components/Monday/Monday\";\nimport Tuesday from \"./components/Tuesday/Tuesday\";\nimport Wednesday from \"./components/Wednesday/Wednesday\";\nimport Thursday from \"./components/Thursday/Thursday\";\nimport Friday from \"./components/Friday/Friday\";\n\n// class App extends React.Component{\n//     state = {\n//         isActive: false\n//     }\n//\n//     isActiveLink = () => {\n//         this.setState({\n//                 isActive: true\n//             }\n//         )\n//     }\n//     render () {\n//         let activeLink = this.state.isActive ? 'activeLink' : ''\n//         return (\n//             <div>\n//                 <HashRouter>\n//                                <Navbar/>\n//                               <Switch>\n//                                    <Route path='/monday'  ><Monday isActiveLink={this.isActiveLink}   /> </Route>\n//                                   <Route path='/tuesday'><Tuesday/> </Route>\n//                                  <Route path='/wednesday'><Wednesday/></Route>\n//                                  <Route path='/thursday'><Thursday/></Route>\n//                                  <Route path='/friday'><Friday/></Route>\n//                                </Switch>\n//\n//                          </HashRouter>\n//             </div>\n//         )\n//     }\n// }\n//\nfunction App() {\n  return (\n      <HashRouter>\n            <Navbar/>\n            <Switch>\n                <Route path='/monday'  ><Monday/> </Route>\n                <Route path='/tuesday'><Tuesday/> </Route>\n                <Route path='/wednesday'><Wednesday/></Route>\n                <Route path='/thursday'><Thursday/></Route>\n                <Route path='/friday'><Friday/></Route>\n            </Switch>\n\n      </HashRouter>\n\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}